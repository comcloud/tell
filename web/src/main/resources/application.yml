#kafka配置信息
kafka:
  producer:
    bootstrap-servers: 106.12.172.42:9092,180.76.225.119:9093,47.103.94.75:9094
    batch-size: 16384                                   #一次最多发送数据量  16K
    retries: 3                                          #发送失败后的重复发送次数
    buffer-memory: 33554432                             #32M批处理缓冲区
    linger: 5                                           #延迟发送时间ms，如果未达到batch-size，但是时间达到linger将发送消息
    acks: -1                                             #集群收到数据之后对于ACK的返回级别
  #    username: admin                                    #连接消费用户名
  #    password: admin                                #消费连接用户密码
  consumer:
    bootstrap-servers: 106.12.172.42:9092,180.76.225.119:9093,47.103.94.75:9094
    auto-offset-reset: latest                           #新建消费组时从什么位置开始消费  latest：最近位置   earliest：最早位置
    max-poll-records: 80                               #批量消费一次最大拉取的数据量
    enable-auto-commit: false                           #是否开启自动提交
    auto-commit-interval: 1000                          #自动提交的间隔时间，自动提交开启时生效
    session-timeout: 20000                              #连接超时时间
    max-poll-interval: 15000                            #手动提交设置与poll的心跳数,如果消息队列中没有消息，等待毫秒后，调用poll()方法。如果队列中有消息，立即消费消息，每次消费的消息的多少可以通过max.poll.records配置。
    max-partition-fetch-bytes: 1048576                  #设置拉取数据的大小,1M
    group-id: achieve_and_stamp                                #消费组
  #    username: admin                                    #连接消费用户名
  #    password: admin                               #消费连接用户密码
  listener:
    batch-listener: true                                #是否开启批量消费，true表示批量消费
    concurrencys: 5                                     #设置消费的线程数
    poll-timeout: 1500                                  #只限自动提交

server:
  port: 8089

############注意这个注释不要开启，也就是ssl注释，直接使用8089上线######

#  ssl:
#    key-store: 5128774_rayss.host.pfx
#    key-store-password: zY79E8qt
#    keyStoreType: PKCS12

swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: 1.0
  application-description: 云顶犀小程序后台管理接口
  try-host: http://localhost/
springfox:
  documentation:
    swagger-ui:
      enabled: true

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.yundingxi.tell.mapper
  configuration:
    map-underscore-to-camel-case: true
#    开启执行sql日志打印###ll
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
spring:
  #  profiles:
  #    active: @profileActive@
  datasource:
    #druid基本属性
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://8.136.1.98:3306/tell?serverTimezone=GMT%2B8&zeroDateTimeBehavior=convertToNull&useUnicode=true&useSSL=false
    username: root
    password: yundingxi
    driver-class-name: com.mysql.cj.jdbc.Driver
    #druid相关配置
    druid:
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      #配置初始化大小/最小/最大
      initial-size: 10
      min-idle: 1
      max-active: 50
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    hikari:
      connection-timeout: 5000
      max-lifetime: 60000
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  redis:
    #    host: 121.5.39.223
    host: 118.25.7.31
    #    host: 127.0.0.1
    port: 6366
    timeout: 300000
    password: hds521666
    database: 1
    lettuce:
      pool:
        max-active: 8
        max-wait: 100000
        max-idle: 8
        min-idle: 0
  #自定义的监听的TOPIC路径
  message:
    topic-name: topic-test
  application:
    name: tell
time:
  cron: 0 0 12 * * ?

wechat:
  baseUrl: "https://api.weixin.qq.com/sns/jscode2session?js_code="
  appid: "wxdfdc52e8d8e3bc70"
  secret: "1095a2e2ecc12767b1f7920aa526a7dd"
  grantType: "authorization_code"

